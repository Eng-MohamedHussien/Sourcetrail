name: Build

on:
  push:
    branches: ["main"]

jobs:
  clang-format:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt install -y clang-format-15

      - name: Run clang-format
        run: find . -type f -name "*.cpp" -or -name "*.h" -or -name "*.hpp" -exec clang-format -n --Werror {} \;

  cmake-format:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt install -y python3-pip

      - name: Install cmake-format
        run: sudo pip install cmakelang

      - name: Run clang-format
        run: find . -type f -name "CMakeLists.txt" -exec cmake-format --check {} \;

  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu Latest GCC", tag: gnu, cc: "gcc", cxx: "g++" }
          - {
              name: "Ubuntu Latest CLang",
              tag: "clang",
              cc: "clang",
              cxx: "clang++",
            }

    name: ${{ matrix.config.name }}
    needs: [clang-format, cmake-format]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Get tags
        run: git fetch --tags origin

      - name: Install dependencies
        run: sudo apt install -y clang libboost-all-dev ninja-build qtbase5-dev libqt5svg5-dev python3-pip grep

      - name: Install conan
        run: sudo pip install conan

      - name: Install conan dependencies
        run: conan install . -s build_type=Release -of .conan/${{ matrix.config.cc }} --build=missing -pr:a .conan/${{ matrix.config.cc }}/profile

      - name: Configure CMake
        run: cmake --preset="ci_${{ matrix.config.tag }}_release"

      - name: Build
        run: cmake --build ${{github.workspace}}/build | tee ${{github.workspace}}/build/build.log

      - name: Count warnings
        run: grep -c "warning:" ${{github.workspace}}/build/build.log

      - name: Test
        run: ctest --test-dir ${{github.workspace}}/build

  linters:
    if: false
    strategy:
      fail-fast: false
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Install dependencies
        run: sudo apt install -y clang-tidy-15 libboost-all-dev ninja-build qtbase5-dev libqt5svg5-dev

      - name: Install conan
        run: sudo pip install conan

      - name: Install conan dependencies
        run: conan install . -s build_type=Release -of .conan/gcc --build=missing -pr:a .conan/gcc/profile

      - name: Configure CMake
        run: cmake --preset="ci_gnu_release"

      - name: Run clang-tidy
        run: find src -not -path "*test*" -type f -name "*.cpp" -exec clang-tidy-15 -p ${{github.workspace}}/build/compile_commands.json {} \;
